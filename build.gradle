//Common config for all projects
allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = 11
    targetCompatibility = 11

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        implementation 'org.apache.logging.log4j:log4j-core:2.13.2'
        implementation 'org.apache.logging.log4j:log4j-api:2.13.2'
        implementation 'io.github.cdimascio:java-dotenv:5.1.4'
        compileOnly "org.projectlombok:lombok:1.18.12"
        annotationProcessor "org.projectlombok:lombok:1.18.12"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.mockito:mockito-core:3.3.3'
        testImplementation 'com.github.javafaker:javafaker:1.0.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
        testCompileOnly "org.projectlombok:lombok:1.18.12"
        testAnnotationProcessor "org.projectlombok:lombok:1.18.12"
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    task view_paths {
        doLast { task ->
            println "$task.project.name"
            println "------------------"
            println "Main: $sourceSets.main.java.srcDirTrees"
            println "   Resources: $sourceSets.main.resources.srcDirTrees"
            println "Tests: $sourceSets.test.java.srcDirTrees"
            println "   Resources: $sourceSets.test.resources.srcDirTrees"
        }
    }
}

// All sub-projects (inside src/*)
subprojects {
    group = "com.bretanac93.${rootProject.name}"

    sourceSets {
        main {
            java { srcDirs = ['main'] }
            resources { srcDirs = ['main/resources'] }
        }
        test {
            java { srcDirs = ['test'] }
            resources { srcDirs = ['test/resources'] }
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web:2.2.7.RELEASE'

        testImplementation rootProject.sourceSets.main.output
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.7.RELEASE'

        if (project.name != "shared") {
            implementation project(":shared")
            testImplementation project(":shared").sourceSets.test.output
        }
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = false
    }
}

// Main project (inside apps/*)
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.2.7.RELEASE'
    }
}

sourceSets {
    main {
        java { srcDirs = ['apps/main'] }
        resources { srcDirs = ['apps/main/resources'] }
    }

    test {
        java { srcDirs = ['apps/test'] }
        resources { srcDirs = ['apps/test/resources'] }
    }
}

apply plugin: 'application'

//bootJar {
//    baseName = 'codetube'
//    version = '0.0.1'
//}

mainClassName = 'com.bretanac93.apps.Starter'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.7.RELEASE'

    implementation project(":shared")
    implementation project(":backoffice")

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.7.RELEASE'
    testImplementation project(":shared").sourceSets.test.output
}
